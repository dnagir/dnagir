<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: agile | Art Of Programming]]></title>
  <link href="http://ApproachE.com/blog/categories/agile/atom.xml" rel="self"/>
  <link href="http://ApproachE.com/"/>
  <updated>2012-03-04T22:23:39+11:00</updated>
  <id>http://ApproachE.com/</id>
  <author>
    <name><![CDATA[Dmytrii Nagirniak]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rules of Productivity]]></title>
    <link href="http://ApproachE.com/blog/rules-of-productivity/"/>
    <updated>2010-11-29T15:29:00+11:00</updated>
    <id>http://ApproachE.com/blog/rules-of-productivity</id>
    <content type="html"><![CDATA[<div class='post'>
<p>How do we get more work done? It is a question that every manager and every passionate worker faces. Yet, for the most part, teams operate on gut instinct and habit. The results are less than optimal. [<a href="http://www.lostgarden.com/2008/09/rules-of-productivity-presentation.html">source</a>]</p>  <h2></h2>  <h2>What is productivity?</h2>  <ul>   <li>+ Work accomplished </li>    <li>- Work required to fix defects </li>    <li>- Work required to fix bad design decisions </li> </ul>  <p>Productivity can be <strong><em>negative </em></strong>when there is more harm than good.</p>  <p><a href="http://lh3.ggpht.com/_6a0bIbZ1HXw/TPMsQV26e9I/AAAAAAAAEx4/W_cKdhYLIEc/s1600-h/image%5B9%5D.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://lh4.ggpht.com/_6a0bIbZ1HXw/TPMsREicCvI/AAAAAAAAEx8/UGFxiCYKKxc/image_thumb%5B5%5D.png?imgmax=800" width="455" height="347" /></a> </p>  <h2>&#160;</h2>  <h2>Experiment 1: Overtime</h2>  <p>Working more than&#160; 40 hours a week leads to decreased productivity.</p>  <ul>   <li>&lt; 40 hours/week – working not “enough”. </li>    <li>&gt; 60 hours/week – small productivity boost. </li> </ul>  <p>The boost only lasts for 3 to 4 weeks and then turns <em><strong>negative</strong></em>. Though can be used for a short-time productivity increase.</p>  <p>So, work 40 hours a week with time for rest and family. Never work 2 months of 60 hrs/week. Overall productivity will be lower, despite the initial boost.</p>  <h2></h2>  <h2>Experiment 2: Work harder in bursts.</h2>  <ul>   <li>Take advantage of the burst during overtime. </li>    <li>Crunch for a week and work only 40 hrs on another week. </li>    <li>Any more efficient work patterns? </li> </ul>  <p>Anything over 40 hrs/week results in a recovery period, no matter how you split it up. 40 hrs/week can be 10 hrs/day for 4 days and one day off. This pattern of work can increase productivity by 10-70%.<a href="http://lh4.ggpht.com/_6a0bIbZ1HXw/TPMsSG9AnZI/AAAAAAAAEyA/Wq0Ax8mVAgc/s1600-h/image%5B5%5D.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px" title="image" border="0" alt="image" src="http://lh4.ggpht.com/_6a0bIbZ1HXw/TPMsS0R9wwI/AAAAAAAAEyE/3C1FYViAnek/image_thumb%5B3%5D.png?imgmax=800" width="468" height="357" /></a></p>  <p>So:</p>  <ul>   <li>Raise productivity immediately with short spurts &lt; 3 weeks. </li>    <li>Overtime temporarily to meet deadlines. </li>    <li>Plan for the reduction in productivity immediately afterwards. </li>    <li>Consider 4-day work week as a flexitime option. </li> </ul>  <p>&#160;</p>  <h2>Experiment 3:&#160; Performance for knowledge workers declines after 35 hrs, not 40.</h2>  <ul>   <li>Creativity and problem solving decreases faster with fatigue than manual labour. </li>    <li>Grinding&#160; out problems by working longer&#160; on average result in inferior solutions. </li>    <li>Lack of sleep is particularly damaging. </li> </ul>  <p>So:</p>  <ul>   <li>Overtime kills creativity. </li>    <li>If you are stuck on a problem, go home or take a break. </li>    <li>Get 8 hrs of sleep to improve your problem solving abilities. </li> </ul>  <p>&#160;</p>  <h2>Experiment 4: Teams on overtime feel like they are doing more, but actually accomplish less.</h2>  <ul>   <li>Team with overtime feels like they are doing much more than the team without overtime. </li>    <li>Team without overtime produces the better product and accomplishes more. </li> </ul>  <p><a href="http://lh3.ggpht.com/_6a0bIbZ1HXw/TPMsTkqVtLI/AAAAAAAAEyI/HZvCvNe_lNY/s1600-h/image%5B13%5D.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://lh6.ggpht.com/_6a0bIbZ1HXw/TPMsUp4sGLI/AAAAAAAAEyM/IHbhVUR7D-k/image_thumb%5B7%5D.png?imgmax=800" width="476" height="363" /></a> </p>  <p>Humans ignore the systematic costs and physiological biases:</p>  <ul>   <li>Failure to measure (cost of defects, bad design decisions, missed opportunities). </li>    <li>Linear extrapolation (initial productivity boost is seen as same in the future). </li>    <li>Habit (a bad one!). </li>    <li>Self reported excellence (behaviour rewarded independent of the results). </li> </ul>  <p>So:</p>  <ul>   <li>The feeling of increased long-term productivity is FALSE. </li>    <li>Use customer metrics to determine the productivity. </li> </ul>  <p>&#160;</p>  <h2>Experiment 5: Productivity is maximised in small teams of 4-8 people.</h2>  <ul>   <li>Productivity of a small group is 30-50% higher than groups over 10 people. </li>    <li>Too high cost of communication for groups with &gt; 10 people. </li>    <li>Smaller teams don’t have enough breadth to solve a wide array of problems. </li> </ul>  <p>So:</p>  <ul>   <li>Split your teams into cross-functional teams. </li>    <li>Link small teams using '”scrum-of-scrums”. </li>    <li>Create processes for:      <ul>       <li>growing new teams; </li>        <li>splitting large teams; </li>        <li>transitioning to new projects; </li>     </ul>   </li> </ul>  <p>&#160;</p>  <h2>Experiment 6: Seat people on the same team together in a closed team room.</h2>  <ul>   <li><em><strong>100% increase </strong></em>in productivity. </li>    <li>Faster communication and problem-solving. </li>    <li>Fewer external interruptions to the team increase overall productivity. </li> </ul>  <p>So:</p>  <ul>   <li>Seat the team in their own room. With walls. </li>    <li>Give at least 5 sqr/meters per person. </li>    <li>Create side rooms for private conversations, phone calls, meetings. </li>    <li>Minimise non-team distractions. </li> </ul>  <p>&#160;</p>  <h2>Experiment 6: Cross-functional teams outperform siloed teams</h2>  <ul>   <li>Produced more effective solutions in the same time. </li>    <li>Much more likely to generate breakthrough solutions. </li>    <li>Short-term loss of negotiation of norms. </li> </ul>  <p>This is why:</p>  <ul>   <li>Fewer external dependencies mean fewer lengthy blockages. </li>    <li>Team has the breadth to see the forest, not just the trees. </li>    <li>Different perspectives mean lower chance of groupthink. </li> </ul>  <p>So:</p>  <ul>   <li>Create the team where every skill needed to solve the problem at hand is in the same room. </li>    <li>Limit the charter: “Do everything = big team”. </li>    <li>Fulltime: focused team member efforts. <em><strong>Multitasking = 15% drop in productivity</strong></em>. </li> </ul>  <p>&#160;</p>  <h2>Experiment 8: Scheduling at 80% of team capacity produces better products.</h2>  <ul>   <li>Scheduling at 100% doesn’t give space to creativity. </li>    <li>No lost time: passionate workers keep thinking. </li>    <li>The 20% goes into new idea generation and process improvements. </li>    <li><em><strong>Producing 20 great features is usually far more profitable than 100 competent features</strong></em>. </li> </ul>  <p>Why?</p>  <ul>   <li>Allows employees to explore many options cheaply. </li>    <li>Gives time to prototype breakthrough solutions that sound crazy on paper. </li>    <li><em><strong>Allows people to pursue passions</strong></em>. </li> </ul>  <p>So:</p>  <ul>   <li>Schedule 20% below possible velocity. </li>    <li>Hold periodic reviews of side projects and award interesting ideas. </li>    <li>Publicise and reward side projects that make their way into production. </li>    <li>Keep a public list of important things if anyone runs out of work (happens rarely). </li> </ul>  <p>&#160;</p>  <h2>Other productivity Techniques</h2>  <h3>Experimentation culture:</h3>  <ul>   <li>Fail faster to find success sooner. </li>    <li>Short iterations. </li>    <li>User metrics such as A/B testing. </li>    <li>State gate portfolio management. </li> </ul>  <h3>Safety nets:</h3>  <ul>   <li>Test-Driven-Development. </li>    <li>Daily/weekly access to real customers. </li> </ul>  <h3>Empower the team</h3>  <ul>   <li>Constraints-based requirements, not mandates from above. </li>    <li>Training. </li> </ul>  <p>See the original <a href="http://www.lostgarden.com/2008/09/rules-of-productivity-presentation.html">PDF</a>.</p>  </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Challenge for Newbies reborn]]></title>
    <link href="http://ApproachE.com/blog/ruby-challenge-for-newbies-reborn/"/>
    <updated>2010-08-09T18:53:00+10:00</updated>
    <id>http://ApproachE.com/blog/ruby-challenge-for-newbies-reborn</id>
    <content type="html"><![CDATA[<div class='post'>
<p>A question has been raised whether or not <a href="http://ruby-challenge.rubylearning.org/">Ruby Challenge for Newbies</a> should exist or not. The main concern is:</p>  <blockquote>   <p>…today, probably due to lack of time or other commitments, not many experienced Rubyists are willing to set a Ruby challenge for the newbies</p> </blockquote>  <p>I guess many Rubysts DO want to set the challenges, but unfortunately very few people these days have enough time.</p>  <p>Another problem with such challenges is that they are somewhat “detached” from the real life. Though I am not saying they are not interesting or educating. Don’t get me wrong, definitely they ARE. But still, I guess, many people would love to see how Ruby should be used correctly (the Rubyish way) in real-world applications. Especially in web apps.</p>  <p>So if there is the problem trying to find new challenges, then either WE need to set up new challenges and recommend people who can do that or, if that is not possible, the challenge itself might need to be &quot;converted&quot; to something different.</p>  <p>It seems the latter is the better choice at this moment.</p>  <p>Having said that, I believe that a good challenge should have attributes:</p>  <ul>   <li>driven by people; </li>    <li>not dependent on one person (though may be controlled by one or a group); </li>    <li>winner(s) appointed by the people (though influenced by the owner/controller); </li>    <li>collaborative; </li>    <li>“shareable”; </li>    <li>role-playing; </li> </ul>  <p>These are the ideas from the top of my head, but it is possible to play around those…</p>  <p>I personally feel like it brings us to the following idea of a challenge: <strong>Ruby Project Development challenge</strong>.</p>  <p>Somebody suggests an idea to implement (interesting web application, some kind of useful tool, etc). Then the challenge becomes a project that people have to deliver. There are main two roles in this challenge:</p>  <ol>   <li>product owners; </li>    <li>development team. </li> </ol>  <p>The <em>product owners</em> group consists of number of people who do like the idea but may not have time, ability to develop that. This group decides where the <em>development team</em> is heading to, and negotiates the requirements.</p>  <p>The <em>development team</em> is a group of self-organised people who do the actual development. Multiple development teams may exist to develop the same application.</p>  <p>The duration for the challenge may vary from weeks to couple of months. The winner of the challenge is the person who gets most number of votes from either product owners/development team or both (not sure yet). If there are multiple teams – then the winning team may also be chosen.</p>  <p>So the process of the challenge would be something like this:</p>  <ol>   <li>Somebody comes up with a project idea. </li>    <li>People join this project either as <em>product owner</em> or as <em>development team</em>. </li>    <li>People get organised in couple of development teams and a couple of product owners if too many guys have joined. </li>    <li>The countdown begins: <em>product owners</em> and <em>development teams</em> start working together (not necessarily at the same time). </li>    <li>During the work people should be able to see what others do, and help each other to deliver the product. </li>    <li>At the end of the challenge winners in following categories may be selected:      <ul>       <li>best developer; </li>        <li>best team; </li>        <li>best team-mate; </li>        <li>incredible inventor; </li>        <li>etc </li>     </ul>   </li> </ol>  <p>This of course is the basic idea, but it has sooo many variations.</p>  <p>So I propose the first challenge of this kind: <strong>Web applications supporting the challenge itself</strong>.</p>  </div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>Dmytrii Nagirniak</div>
<div class='content'>
Thanks for your comment, nice to know about all that.<br /><br />My idea was to start the challenge for a real application so that people can discuss what is happening.<br />The Ruby quiz and similar are pretty isolated (though a reaaallly interesting).<br />TopCoder is probably a good choice here, I was not aware of that at the moment I wrote the article.<br /><br />Thanks again for the suggestions.</div>
</div>
<div class='comment'>
<div class='author'>spyromus</div>
<div class='content'>
Check TopCoder if you haven&#39;t yet. They don&#39;t have Ruby competitions there, but they do have .Net and Java (and now Objective-C) and they pay real money for your time. So you can combine the pleasure of learning with receiving money for your work.<br /><br />As for the Ruby Challenge, there&#39;s enough groups like that around. Take Ruby Quiz for instance, that is out there what it seems for ages. They pose interesting challenges and discuss the solutions. Also, you can turn to Code Kata which is intended to develop the sense of the problem and practise your ability to think, while giving you a real-world problems to toy with.<br /><br />As I said, there&#39;s plenty, and there&#39;s totally no need to drive anything in existence to what you think the ideal. If you can&#39;t find what you need, imagine it as your next assignment -- to create a web site like what you just described -- and go implement it.<br /><br />Satish doesn&#39;t have time to work on the Ruby Challenge as he is riding a cool new wave of Clojure now, and you are concerned about his old favorite far more than he is. Take it easy. Projects come and go every day. :)</div>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Agile Manifesto to Agile Principles]]></title>
    <link href="http://ApproachE.com/blog/agile-manifesto-to-agile-principles/"/>
    <updated>2010-06-19T21:22:00+10:00</updated>
    <id>http://ApproachE.com/blog/agile-manifesto-to-agile-principles</id>
    <content type="html"><![CDATA[<div class='post'>
A while ago I wrote about <a href="http://blog.approache.com/2010/02/agile-manifesto-reminder.html">agile manifesto</a> everybody should keep in mind (when they claim to be agily-ish). Now I want to quote the principle of the Agile. This is another reminder for my after reading the great book - <a href="http://www.pragprog.com/news/the-agile-samurai">The Agile Samurai</a>. Highly recommend it.<br />
So here <a href="http://agilemanifesto.org/principles.html" target="_blank">they are</a>:<br />
<ol>
<li>Our highest priority is to <b>satisfy the customer       </b>through <b>early and continuous delivery</b>      <br />of valuable software.</li>
<li><b>Welcome changing requirements</b>, even late in      <br />development. Agile processes harness change for      <br />the customer's competitive advantage.</li>
<li><b>Deliver working software frequently</b>, from a      <br />couple of weeks to a couple of months, with a      <br />preference to the shorter timescale.</li>
<li>Business people and developers must <b>work       <br />together </b>daily throughout the project.</li>
<li>Build projects around <b>motivated individuals</b>.      <br />Give them the environment and support they need,      <br />and <b>trust them </b>to get the job done.</li>
<li>The most efficient and effective method of     <br />conveying information to and within a development      <br />team is <b>face-to-face conversation</b>.</li>
<li><b>Working software</b> is the primary <b>measure of progress</b>.</li>
<li>Agile processes promote <b>sustainable development</b>.      <br />The sponsors, developers, and users should be able      <br />to maintain a constant pace indefinitely.</li>
<li><b>Continuous</b> attention to <b>technical excellence</b>      <br />and good design enhances agility.</li>
<li><b>Simplicity</b> - the art of maximizing the amount      <br />of work not done - is essential.</li>
<li>The best architectures, requirements, and designs     <br />emerge from <b>self-organizing teams</b>.</li>
<li>At regular intervals, the team reflects on how     <br />to <b>become more effective</b>, then tunes and adjusts      <br />its behavior accordingly.</li>
</ol></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Developer abuse]]></title>
    <link href="http://ApproachE.com/blog/developer-abuse/"/>
    <updated>2010-03-29T23:19:00+11:00</updated>
    <id>http://ApproachE.com/blog/developer-abuse</id>
    <content type="html"><![CDATA[<div class='post'>
Have just watched the Developer Abuse video.<br />
Though it is probably meant to be funny, it made me very sad. Sad from the fact that there are a lot non-professional approaches to such a simple and well know IT area (and yes, it <i><b>IS</b></i> simple, it is not a rocket science). Sad due to the fact that I sometimes am in such situations and some of my friends are.<br />
And very sad because of very little number of universities actually promote the Agility and instead concentrate heavily just on the technology (which will become obsolete anyway very soonish). Thus newcomers often just have to educate themselves again to face the real-world (which changes continuously and all the time).<br />
<br />
<object height="385" width="480"><param name="movie" value="http://www.youtube.com/v/LYlhCGng5Mk&hl=en_US&fs=1&rel=0">



</param>
<param name="allowFullScreen" value="true">



</param>
<param name="allowscriptaccess" value="always">



</param>
<embed src="http://www.youtube.com/v/LYlhCGng5Mk&hl=en_US&fs=1&rel=0" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="385"></embed></object></div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>wsxwhx690</div>
<div class='content'>
IS VERY GOOD<a href="http://x121.22vt.com/" rel="nofollow">.</a><a href="http://x122.22vt.com/" rel="nofollow">.</a><a href="http://x123.22vt.com/" rel="nofollow">.</a><a href="http://x124.22vt.com/" rel="nofollow">.</a><a href="http://x125.22vt.com/" rel="nofollow">.</a><a href="http://x126.22vt.com/" rel="nofollow">.</a><a href="http://x127.22vt.com/" rel="nofollow">.</a><a href="http://x128.22vt.com/" rel="nofollow">.</a><a href="http://x129.22vt.com/" rel="nofollow">.</a><a href="http://x130.22vt.com/" rel="nofollow">.</a><a href="http://x131.22vt.com/" rel="nofollow">.</a><a href="http://x132.22vt.com/" rel="nofollow">.</a><a href="http://x133.22vt.com/" rel="nofollow">.</a><a href="http://x134.22vt.com/" rel="nofollow">.</a><a href="http://x135.22vt.com/" rel="nofollow">.</a><a href="http://x136.22vt.com/" rel="nofollow">.</a><a href="http://x137.22vt.com/" rel="nofollow">.</a><a href="http://x138.22vt.com/" rel="nofollow">.</a><a href="http://x139.22vt.com/" rel="nofollow">.</a><a href="http://x140.22vt.com/" rel="nofollow">.</a><a href="http://x141.22vt.com/" rel="nofollow">.</a><a href="http://x142.22vt.com/" rel="nofollow">.</a><a href="http://x143.22vt.com/" rel="nofollow">.</a><a href="http://x144.22vt.com/" rel="nofollow">.</a><a href="http://x145.22vt.com/" rel="nofollow">.</a><a href="http://x146.22vt.com/" rel="nofollow">.</a><a href="http://x147.22vt.com/" rel="nofollow">.</a><a href="http://x148.22vt.com/" rel="nofollow">.</a><a href="http://x149.22vt.com/" rel="nofollow">.</a><a href="http://x150.22vt.com/" rel="nofollow">.</a></div>
</div>
<div class='comment'>
<div class='author'>Dmytrii Nagirniak</div>
<div class='content'>
The video is basically an advertisement of the company called ThoughtWorks. They heavily promote <a href="http://dnagir.blogspot.com/2010/02/agile-manifesto-reminder.html" rel="nofollow">Agile</a> style of work.<br />On the video there is a guy who wants to work that way but just cannot due to the environment he is being put in.</div>
</div>
<div class='comment'>
<div class='author'>Viktor</div>
<div class='content'>
what&#39;s that? didn&#39;t get it.</div>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Agile Manifesto - Reminder]]></title>
    <link href="http://ApproachE.com/blog/agile-manifesto-reminder/"/>
    <updated>2010-02-22T10:49:00+11:00</updated>
    <id>http://ApproachE.com/blog/agile-manifesto-reminder</id>
    <content type="html"><![CDATA[<div class='post'>
Just a reminder about the agile <a href="http://agilemanifesto.org/" target="_blank">manifesto</a>. The purpose of this post is to read and write all that again and keep in mind <b>both left and right</b> parts of it. Just remember to<br />
<blockquote>
value in the items on the right, … value the items on the left more</blockquote>
<ul>
<li><b>Individuals and interactions</b> over processes and tools</li>
<li><b>Working software</b> over comprehensive documentation</li>
<li><b>Customer collaboration</b> over contract negotiation</li>
<li><b>Responding to change</b> over following a plan</li>
</ul>
This all especially comes to mind after reading Ayende's <a href="http://ayende.com/Blog/archive/2010/02/20/nice-process-but-what-about-the-engineering-bits.aspx" target="_blank">post</a> about ignoring the actual building of the software.</div>

]]></content>
  </entry>
  
</feed>
