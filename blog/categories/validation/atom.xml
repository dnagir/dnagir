<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: validation | Art Of Programming]]></title>
  <link href="http://ApproachE.com/blog/categories/validation/atom.xml" rel="self"/>
  <link href="http://ApproachE.com/"/>
  <updated>2012-03-04T22:23:39+11:00</updated>
  <id>http://ApproachE.com/</id>
  <author>
    <name><![CDATA[Dmytrii Nagirniak]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WebForms Validate and Validate with group]]></title>
    <link href="http://ApproachE.com/blog/webforms-validate-and-validate-with/"/>
    <updated>2009-09-09T10:13:00+10:00</updated>
    <id>http://ApproachE.com/blog/webforms-validate-and-validate-with</id>
    <content type="html"><![CDATA[<div class='post'>
.NET 2.0 introduced a new method Validate on the page. It has additional parameter: validation group. As we all know and name suggests it indicates the group the validation should be applied to.<br />
But how do old Validate and new Validate(validationGroup) methods work together?<br />
Here is the flow when the the validation is executed via Validate(validationGroup) (it is the case with controls that have CausesValidation property):<br />
<ol>
<li>Validate(validationGroup) is executed.</li>
<li>It retrieves all the validators for the given group.</li>
<br />
<ol>
<li>Comparison is case-insensitive.</li>
<li>By default validationGroup is empty string for all validators and the controls that cause the validation.</li>
</ol>
<br />
<li>If the validationGroup is default one (eg: empty string) AND number of validators for the empty group is the same as total number of validators:</li>
<br />
<ol>
<li>YES: Fallback to the .NET 1.1 Validation without validation group.</li>
<li>NO: Execute each validator retrieved in step 2.</li>
</ol>
</ol>
The flow if you call validation using the old way: Validate without parameters. It just executes the step 1.1 described above.<br />
So the moral is, if you override the Validate without parameters to perform custom logic it won’t necessarily be called every time. So the moral of the story is:<br />
<ol>
<li>Use only one validation method. And it must be Validate with validationGroup as it is called automatically by the controls and at the step 3.2 ignores the default (Validate without parameters) method.</li>
<li>Override only one validation method to avoid double validation logic (which should be the same as in point 1).</li>
<li>Make sure you manually call only one validation method. Again according to 1.</li>
</ol>
So we really should keep this in mind as forgetting to call Validate() instead of Validate(string.Empty) will break the validation, and very likely to be found in production as WebForms testing is painful.<br />
I think this approach is wrong. It’s aim was to maintain backwards compatibility (which works up to some point). But it had one of the following ways:<br />
<ol>
<li>I would better prefer to have broken interface and removed/obsolete old Validate (without parameter) method.</li>
<li>To avoid breaking functionality the default Validate had to call Validate(string.Empty) and not other way around.</li>
</ol>
So after migrating to ASP.NET 2.0 still fighting WebForms… and its “compatibility” which “hidden incompatibility”.</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What’s around for last months]]></title>
    <link href="http://ApproachE.com/blog/whats-around-for-last-months/"/>
    <updated>2009-04-09T17:01:00+10:00</updated>
    <id>http://ApproachE.com/blog/whats-around-for-last-months</id>
    <content type="html"><![CDATA[<div class='post'>
I haven’t been blogging for a while and even thought about giving it up. Sometimes I just didn't have time.<br />
But i want to recover a bit and write at least summary of thing I would like to write about.<br />
<br />
For now I’ll just post the summary of the most interesting/exciting thing that happened during last months. So here we go:<br />
<ul>
<li>Official ASP.NET MVC Release. It still has a lot of thing to improve, but I enjoy it. I mean it. I really do. And even wrote my own library with different extensions. Also MvcContrib’s <a href="http://www.jeremyskinner.co.uk/2009/02/08/rewriting-the-mvccontrib-grid/" target="_blank">Grid</a> is pretty exciting now (not very good with paging, filtering, sorting but still).</li>
<li><a href="http://extjs.com/blog/2009/04/04/ext-core-30-beta-released/" target="_blank">Recently release ExtJs Core</a>. This is MIT licensed, cut version of ExtJS (whiGPL-licensed). It supports the DOM manipulations, Ajax, effects etc. Well. everything that any other JavaScript library does. Why I put this here? We need to remember that ExtJS used to <b>L</b>GPL licensed which allowed to deploy it. A lot of <a href="http://extjs.com/forum/showthread.php?t=33096" target="_blank">issues were raised</a> when it became GPL licensed. So they release part of it with very permissive MIT license. Good for those to transfer from old LGPL ExtJS to this one, even if it’s cut down. (I think I would still prefer jQuery instead, they did change license to more strict once, so they can completely make it commercial).</li>
<li>A lot of talks around <a href="http://www.google.com.au/search?q=Google+becomes+evil" target="_blank">Google becomes evil</a> (yep, the link is Google search:)).</li>
<li><a href="http://blog.codeville.net/2009/03/27/first-steps-with-lightweight-test-automation-framework/" target="_blank">Lightweight Test Automation Framework</a>. Wanted to play with it. No time found.</li>
<li>IE8 has been released. Get ready to go and fix all the things on all websites. I don’t like when a new major version of any browser is released :)</li>
<li>Real-life code sample: <a href="http://ayende.com/Blog/archive/2009/03/19/how-not-to-write-a-logger.aspx" target="_blank">How NOT to write a logger</a> (have fun).</li>
<li><a href="http://www.hanselman.com/blog/FreeASPNETMVCEBookNerdDinnercomWalkthrough.aspx" target="_blank">Free ASP.NET MVC Book</a>.</li>
<li><a href="http://www.capableobjects.com/apps/InstantKB13/KnowledgebaseArticle50020.aspx" target="_blank">ECO5</a> gets released soon. It seems there’s still no ability to extend operations executed on the Database Server. Linq2Eco is far from supporting everything that Linq2Sql does. All other is great.</li>
<li>Reminder. ding, ding: <a href="http://www.codinghorror.com/blog/archives/001210.html" target="_blank">Most Dangerous Programming mistakes</a>.</li>
<li><a href="http://blog.codeville.net/2009/01/10/xval-a-validation-framework-for-aspnet-mvc/" target="_blank">xVal</a> – validation framework for MVC. Woth looking at.</li>
<li><a href="http://mrpmorris.blogspot.com/2009/04/my-first-aop_08.html" target="_blank">AOP</a> in Delphi – it’s better than just PostSharp because you can use the Aspects (PostSharp just postcompiles it)</li>
<li>Probably something else…</li>
</ul>
I have been working on a project with Ms Access fron-end and Sql Server back-end. I’ll write another story about it. Can tell in a short that I had a lot of fun (mostly hysterical). Sometimes I hated it, sometimes I loved. Good old client-server DOESN’T suck.<br />
<br />
Now leaving office and going for holidays!<br />
<br />
<b>Happy Easter!</b></div>

]]></content>
  </entry>
  
</feed>
