<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Art Of Programming]]></title>
  <link href="http://ApproachE.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://ApproachE.com/"/>
  <updated>2012-03-10T23:10:59+11:00</updated>
  <id>http://ApproachE.com/</id>
  <author>
    <name><![CDATA[Dmytrii Nagirniak]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Increase your productivity in Vim and Terminal]]></title>
    <link href="http://ApproachE.com/blog/increase-your-productivity-with-vim-and-terminal/"/>
    <updated>2012-03-12T06:30:00+11:00</updated>
    <id>http://ApproachE.com/blog/increase-your-productivity-with-vim-and-terminal</id>
    <content type="html"><![CDATA[<p>This post will give you <em>minimal</em> suggestions that
you can apply in your daily work to immediately increase your productivity.</p>

<p>I'm writing this after watching the <a href="http://blog.steveklabnik.com/posts/2012-02-22-two-pomodoros">Steve Klabnik's screencast</a>
where he is working <em>"in a wild"</em>.</p>

<p>I love this idea and have done videoing
how I work on a little <a href="http://approache.com/blog/rails-plugin-with-tested-assets/">ios-checkboxes</a>
and <a href="http://approache.com/blog/knockoutjs-validations-video/">knockout-rails</a>.</p>

<p>The world would an awesome place if more people (yes, including <strong>you</strong>) would start sharing the way they work.
Well done Steve!</p>

<p>But today I want to focus on just a few of things that should dramatically improve the productivity.</p>

<!-- more -->


<h1>Vim productivity</h1>

<p><blockquote><p>Vim is one of a select bunch of tools for which I have no substitute.<br/>It is a brilliant piece of work!</p><footer><strong>Biju Chacko</strong> <cite>Vim Quotes</cite></footer></blockquote></p>

<p>The power of vim is huge. Very small number of people actually do know how to use most of it.
I'm certainly not one of them.</p>

<p>But let me suggest some of the things that keep myself more productive:</p>

<h2>Remap your CapsLock key to Control</h2>

<p><em>Why?</em> Because the <em>Control</em> key is located extremely inconveniently
while <em>CapsLock</em> is right under your baby-finger. All the time.</p>

<p><em>How?</em> Follow <a href="http://www.manicai.net/comp/swap-caps-ctrl.html">this guide</a>.</p>

<p>I blindly trusted the <em>command</em> given by <a href="http://twitter.com/garybernhardt">Garry Bernhard</a>
in his <a href="http://www.destroyallsoftware.com/screencasts/catalog/some-vim-tips">DestroyAllSoftware - Some Vim Tips</a>
on this. Never regretted.</p>

<p>Don't think about it. Just do it and I'm sure you won't go back.</p>

<h2>Use Vim jumps</h2>

<p><em>Why?</em> A lot of times you need to jump forth and back between 2 place or go to where you've been a minute ago.
A log of people just find that line/file again. It's a waste of time.</p>

<p><em>How?</em></p>

<ul>
<li><code>Ctrl-o</code> and <code>Ctrl-i</code> to go to the previous/next location you jumped to.</li>
<li><code>``</code> (two backticks) - jump back to where you were.</li>
<li><code>gi</code> - go to the last place you inserted a text.</li>
</ul>


<h2>Use appropriate Vim navigations</h2>

<p><em>Why?</em> Typing <code>l</code> (move right one symbol) or similar multiple times is waste of time.</p>

<p><em>How?</em></p>

<ul>
<li><code>{</code> and <code>}</code> - jump <em>paragraph</em> back and forth.</li>
<li><code>Ctrl-F/B</code> - move one <em>screen</em> back and forth.</li>
<li><code>Ctrl-E/Y</code> - <em>scroll</em> the screen.</li>
<li><code>*</code> (star) - search for the word under cursor, then <code>n/p</code> to jump to next/previous.</li>
<li>add <code>imap jj &lt;Esc&gt;</code> to your <code>.vimrc</code> and don't use <code>Esc</code> anymore.</li>
</ul>


<h2>Changing case and repeating a command</h2>

<p><em>Why?</em> Because a lot of things can be done much more efficiently.</p>

<p><em>How?</em></p>

<ul>
<li><code>~</code> (tilde) - toggle the casing of a letter/selection (upper-case/down-case).</li>
<li><code>.</code> (dot) - repeat the last set of commands (use in a combination with search, such as <code>*</code>, and jumps).</li>
</ul>


<h2>Temporarily map commands you run</h2>

<p><em>Why?</em> Because you don't want to type the same command over and over again.</p>

<p><em>How?</em> One example is <code>nmap &lt;leader&gt;s :! bundle exec rspec % --colour --focus&lt;cr&gt;</code>.
This will run the current spec file when you press <code>,s</code> (in my case).</p>

<p><strong>Rule of thumb</strong>: if you do something more then twice in the terminal outside of Vim, map it using <code>nmap</code>.
Don't switch windows, <em>don't lose your context</em>.</p>

<h1>Terminal productivity</h1>

<p>Just a couple of things here.</p>

<h2>Use iTerm2</h2>

<p><em>Why?</em> At least because you can split window without losing the context.</p>

<p><em>How?</em> Install it from the <a href="http://www.iterm2.com/">iterm2.com</a> site (or even use tmux!).</p>

<p>Use <code>Ctrl-D/Ctrl-Shift-D</code> (while in Vim or any iTerm tab/window) to split the current terminal window opening a new shell but still being able to see what you are currently working on.</p>

<h2>Use <code>!!</code> (double bang) or arrow up</h2>

<p><em>Why?</em> Because it repeats the previous command that you should have mapped in Vim but didn't.</p>

<p><em>How?</em> Just type <code>!!</code> and it will execute last command.
This is simple, but strangely enough I can see people are actually retyping commands.</p>

<h2>Enable Vim mode in bash</h2>

<p><em>Why?</em> Because you navigate in the terminal too. And Vim mode makes it seamless.</p>

<p><em>How</em>? <a href="http://linuxart.com/log/archives/2005/10/13/super-useful-inputrc/">Create an inputrc file</a> and
add <code>set editing-mode vi</code> to it.</p>

<h1>Useful links</h1>

<ul>
<li><a href="http://blog.sanctum.geek.nz/vim-anti-patterns/">Vim anti-patterns</a> - must-read if you want to be better at Vim.</li>
<li><a href="http://peepcode.com/products/smash-into-vim-i">Smash into Vim</a> - always awesome PeepCode series on Vim.</li>
<li><a href="https://workshops.thoughtbot.com/vim">Vim for Rails developers</a> - nice overview of the plug-ins and more productive use of Vim.</li>
<li><a href="http://peepcode.com/products/meet-the-command-line">Meet the Command Line</a> and <a href="http://peepcode.com/products/advanced-command-line">Advanced Command Line</a> - great screencasts if you want to get better with command line.</li>
<li><a href="http://www.destroyallsoftware.com">DestroyAllSoftware screencasts</a> - screencasts covering Vim, Unix, Ruby.</li>
</ul>


<p>The DestroyAllSoftware stands out here because Gary covers range of extremely focused, professional topics that you can't ignore.</p>

<p>Hope this post will help you to leverage your tools a bit better and will teach you a thing or two.</p>
]]></content>
  </entry>
  
</feed>
